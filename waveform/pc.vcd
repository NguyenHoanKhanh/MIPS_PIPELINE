$date
	Mon Oct 13 01:41:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! pc_o_ce $end
$var wire 32 " pc_o_pc [31:0] $end
$var reg 1 # pc_clk $end
$var reg 1 $ pc_i_ce $end
$var reg 1 % pc_i_change_pc $end
$var reg 32 & pc_i_pc [31:0] $end
$var reg 1 ' pc_rst $end
$scope module pc $end
$var wire 1 ( pc_clk $end
$var wire 1 ) pc_i_ce $end
$var wire 1 * pc_i_change_pc $end
$var wire 32 + pc_i_pc [31:0] $end
$var wire 1 , pc_rst $end
$var reg 1 - pc_o_ce $end
$var reg 32 . pc_o_pc [31:0] $end
$var reg 32 / temp_pc [31:0] $end
$upscope $end
$scope task reset $end
$var integer 32 0 counter [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 0
b0 /
b0 .
0-
0,
bx +
x*
x)
0(
0'
bx &
x%
x$
0#
b0 "
0!
$end
#5
1#
1(
#10
0#
0(
#15
1'
1,
1#
1(
#20
0#
0(
#25
b100 /
1-
1!
1$
1)
1#
1(
#30
0#
0(
#35
b1000 /
b100 .
b100 "
1#
1(
#40
0#
0(
#45
b1100 /
b1000 .
b1000 "
1#
1(
#50
0#
0(
#55
b10000 /
b1100 .
b1100 "
1#
1(
#60
0#
0(
#65
b10100 /
b10000 .
b10000 "
1#
1(
#70
0#
0(
#75
b11000 /
b10100 .
b10100 "
1#
1(
#80
0#
0(
#85
b11100 /
b11000 .
b11000 "
1#
1(
#90
0#
0(
#95
b100000 /
b11100 .
b11100 "
1#
1(
#100
0#
0(
#105
b100100 /
b100000 .
b100000 "
1#
1(
#110
0#
0(
#115
b101000 /
b100100 .
b100100 "
1#
1(
#120
0#
0(
#125
b101100 /
b101000 .
b101000 "
1#
1(
#130
0#
0(
#135
b110000 /
b101100 .
b101100 "
1#
1(
#140
0#
0(
#145
b110100 /
b110000 .
b110000 "
1#
1(
#150
0#
0(
#155
b111000 /
b110100 .
b110100 "
1#
1(
#160
0#
0(
#165
b111100 /
b111000 .
b111000 "
1#
1(
#170
0#
0(
#175
b1000000 /
b111100 .
b111100 "
1#
1(
#180
0#
0(
#185
b1000100 /
b1000000 .
b1000000 "
1#
1(
#190
0#
0(
#195
b1001000 /
b1000100 .
b1000100 "
1#
1(
#200
0#
0(
#205
b1001100 /
b1001000 .
b1001000 "
1#
1(
#210
0#
0(
#215
b1010000 /
b1001100 .
b1001100 "
1#
1(
#220
0#
0(
#225
b1010100 /
b1010000 .
b1010000 "
1#
1(
#230
0#
0(
#235
b1011000 /
b1010100 .
b1010100 "
1#
1(
#240
0#
0(
#245
b1011100 /
b1011000 .
b1011000 "
1#
1(
#250
0#
0(
#255
b1100000 /
b1011100 .
b1011100 "
1#
1(
#260
0#
0(
#265
b1100100 /
b1100000 .
b1100000 "
1#
1(
#270
0#
0(
#275
b1101000 /
b1100100 .
b1100100 "
1#
1(
#280
0#
0(
#285
b1101100 /
b1101000 .
b1101000 "
1#
1(
#290
0#
0(
#295
b1110000 /
b1101100 .
b1101100 "
1#
1(
#300
0#
0(
#305
b1110100 /
b1110000 .
b1110000 "
1#
1(
#310
0#
0(
#315
b1111000 /
b1110100 .
b1110100 "
1#
1(
#320
0#
0(
#325
b1111100 /
b1111000 .
b1111000 "
1#
1(
#330
0#
0(
#335
b10000000 /
b1111100 .
b1111100 "
1#
1(
#340
0#
0(
#345
b10000100 /
b10000000 .
b10000000 "
1#
1(
#350
0#
0(
#355
b10001000 /
b10000100 .
b10000100 "
1#
1(
#360
0#
0(
#365
b10001100 /
b10001000 .
b10001000 "
1#
1(
#370
0#
0(
#375
b10010000 /
b10001100 .
b10001100 "
1#
1(
#380
0#
0(
#385
b10010100 /
b10010000 .
b10010000 "
1#
1(
#390
0#
0(
#395
b10011000 /
b10010100 .
b10010100 "
1#
1(
#400
0#
0(
#405
b10011100 /
b10011000 .
b10011000 "
1#
1(
#410
0#
0(
#415
b10100000 /
b10011100 .
b10011100 "
1#
1(
#420
0#
0(
#425
b10100100 /
b10100000 .
b10100000 "
1#
1(
