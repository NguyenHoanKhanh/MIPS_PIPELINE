$date
	Sat Oct 11 01:47:00 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! f_o_ce $end
$var wire 32 " f_o_instr [31:0] $end
$var reg 1 # f_i_ce $end
$var integer 32 $ i [31:0] $end
$scope module f $end
$var wire 1 % f_clk $end
$var wire 1 & f_i_ack $end
$var wire 1 ' f_i_ce $end
$var wire 32 ( f_i_instr [31:0] $end
$var wire 1 ) f_i_last $end
$var wire 1 * f_rst $end
$var reg 1 + f_o_ce $end
$var reg 32 , f_o_instr [31:0] $end
$var reg 1 - f_o_syn $end
$scope module t $end
$var wire 1 % t_clk $end
$var wire 1 . t_i_syn $end
$var wire 1 * t_rst $end
$var integer 32 / counter [31:0] $end
$var reg 1 0 t_o_ack $end
$var reg 32 1 t_o_instr [31:0] $end
$var reg 1 2 t_o_last $end
$upscope $end
$upscope $end
$scope task display $end
$var integer 32 3 counter [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 3
x2
bx 1
x0
bx /
x.
x-
bx ,
x+
z*
x)
bx (
1'
x&
z%
b0 $
1#
bx "
x!
$end
#10
b1 $
#20
b10 $
#30
b11 $
#40
b100 $
#50
b101 $
#60
b110 $
#70
b111 $
#80
0#
0'
b1000 $
#180
