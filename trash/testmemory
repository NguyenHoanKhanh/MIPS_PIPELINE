#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_01234540 .scope module, "tb" "tb" 2 4;
 .timescale -9 -12;
v012415E8_0 .var "alu_value_addr", 31 0;
v01241A60_0 .var/i "i", 31 0;
v012416F0_0 .var "m_clk", 0 0;
v01241488_0 .var "m_i_ce", 0 0;
v012417A0_0 .var "m_i_mask", 3 0;
v01241748_0 .var "m_i_store_data", 31 0;
v01241AB8_0 .net "m_o_load_data", 31 0, L_0120DF58; 1 drivers
v01241A08_0 .var "m_rst", 0 0;
v012414E0_0 .var "m_wr_en", 0 0;
S_01234210 .scope task, "load_data" "load_data" 2 62, 2 62, S_01234540;
 .timescale -9 -12;
v01241590_0 .var "addr", 31 0;
TD_tb.load_data ;
    %wait E_012329B0;
    %set/v v01241488_0, 1, 1;
    %load/v 8, v01241590_0, 32;
    %set/v v012415E8_0, 8, 32;
    %wait E_012329B0;
    %vpi_call 2 68 "$display", "[%0t] Addr=%0d => Load Data=0x%08h", $time, v012415E8_0, v01241AB8_0;
    %end;
S_012343A8 .scope task, "reset" "reset" 2 38, 2 38, S_01234540;
 .timescale -9 -12;
v01247D70_0 .var/i "cycles", 31 0;
TD_tb.reset ;
    %set/v v01241A08_0, 0, 1;
    %load/v 8, v01247D70_0, 32;
T_1.0 %cmp/s 0, 8, 32;
    %jmp/0xz T_1.1, 5;
    %add 8, 1, 32;
    %wait E_012329B0;
    %jmp T_1.0;
T_1.1 ;
    %set/v v01241A08_0, 1, 1;
    %wait E_012329B0;
    %end;
S_01234320 .scope task, "store_data" "store_data" 2 48, 2 48, S_01234540;
 .timescale -9 -12;
v0120ABA0_0 .var "addr", 31 0;
v01247CC0_0 .var "data", 31 0;
v01247D18_0 .var "mask", 3 0;
E_012329B0 .event posedge, v01203340_0;
TD_tb.store_data ;
    %wait E_012329B0;
    %set/v v01241488_0, 1, 1;
    %set/v v012414E0_0, 1, 1;
    %load/v 8, v01247D18_0, 4;
    %set/v v012417A0_0, 8, 4;
    %load/v 8, v0120ABA0_0, 32;
    %set/v v012415E8_0, 8, 32;
    %load/v 8, v01247CC0_0, 32;
    %set/v v01241748_0, 8, 32;
    %wait E_012329B0;
    %set/v v012414E0_0, 0, 1;
    %end;
S_01234CB0 .scope module, "m" "memory" 2 14, 3 4, S_01234540;
 .timescale -9 -12;
L_0120DF58 .functor BUFZ 32, L_012418A8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0120AEB0_0 .net *"_s0", 31 0, L_012418A8; 1 drivers
v0120B400_0 .net "alu_value_addr", 31 0, v012415E8_0; 1 drivers
v0120B458 .array "data_mem", 31 0, 31 0;
v0120B4B0_0 .var/i "i", 31 0;
v01203340_0 .net "m_clk", 0 0, v012416F0_0; 1 drivers
v01203398_0 .net "m_i_ce", 0 0, v01241488_0; 1 drivers
v012033F0_0 .net "m_i_mask", 3 0, v012417A0_0; 1 drivers
v0120AA40_0 .net "m_i_store_data", 31 0, v01241748_0; 1 drivers
v0120AA98_0 .alias "m_o_load_data", 31 0, v01241AB8_0;
v0120AAF0_0 .net "m_rst", 0 0, v01241A08_0; 1 drivers
v0120AB48_0 .net "m_wr_en", 0 0, v012414E0_0; 1 drivers
E_01232A50 .event negedge, v0120AAF0_0, v01203340_0;
L_012418A8 .array/port v0120B458, v012415E8_0;
    .scope S_01234CB0;
T_3 ;
    %wait E_01232A50;
    %load/v 8, v0120AAF0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_3.0, 8;
    %set/v v0120B4B0_0, 0, 32;
T_3.2 ;
    %load/v 8, v0120B4B0_0, 32;
   %cmpi/s 8, 32, 32;
    %jmp/0xz T_3.3, 5;
    %load/v 8, v0120B4B0_0, 32;
    %ix/getv/s 3, v0120B4B0_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0120B458, 0, 8;
t_0 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0120B4B0_0, 32;
    %set/v v0120B4B0_0, 8, 32;
    %jmp T_3.2;
T_3.3 ;
    %jmp T_3.1;
T_3.0 ;
    %load/v 8, v01203398_0, 1;
    %jmp/0xz  T_3.4, 8;
    %load/v 8, v0120AB48_0, 1;
    %jmp/0xz  T_3.6, 8;
    %load/v 8, v012033F0_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.8, 8;
    %load/v 8, v0120AA40_0, 8; Only need 8 of 32 bits
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v0120B400_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0120B458, 0, 8;
t_1 ;
T_3.8 ;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.10, 4;
    %load/x1p 8, v012033F0_0, 1;
    %jmp T_3.11;
T_3.10 ;
    %mov 8, 2, 1;
T_3.11 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.12, 8;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.14, 4;
    %load/x1p 8, v0120AA40_0, 8;
    %jmp T_3.15;
T_3.14 ;
    %mov 8, 2, 8;
T_3.15 ;
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v0120B400_0;
    %jmp/1 t_2, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 8, 0; part off
    %assign/av v0120B458, 0, 8;
t_2 ;
T_3.12 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.16, 4;
    %load/x1p 8, v012033F0_0, 1;
    %jmp T_3.17;
T_3.16 ;
    %mov 8, 2, 1;
T_3.17 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.18, 8;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.20, 4;
    %load/x1p 8, v0120AA40_0, 8;
    %jmp T_3.21;
T_3.20 ;
    %mov 8, 2, 8;
T_3.21 ;
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v0120B400_0;
    %jmp/1 t_3, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 16, 0; part off
    %assign/av v0120B458, 0, 8;
t_3 ;
T_3.18 ;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.22, 4;
    %load/x1p 8, v012033F0_0, 1;
    %jmp T_3.23;
T_3.22 ;
    %mov 8, 2, 1;
T_3.23 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.24, 8;
    %ix/load 1, 24, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.26, 4;
    %load/x1p 8, v0120AA40_0, 8;
    %jmp T_3.27;
T_3.26 ;
    %mov 8, 2, 8;
T_3.27 ;
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v0120B400_0;
    %jmp/1 t_4, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 24, 0; part off
    %assign/av v0120B458, 0, 8;
t_4 ;
T_3.24 ;
T_3.6 ;
T_3.4 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_01234540;
T_4 ;
    %set/v v012416F0_0, 0, 1;
T_4.0 ;
    %delay 5000, 0;
    %load/v 8, v012416F0_0, 1;
    %inv 8, 1;
    %set/v v012416F0_0, 8, 1;
    %jmp T_4.0;
    %end;
    .thread T_4;
    .scope S_01234540;
T_5 ;
    %vpi_call 2 33 "$dumpfile", "./waveform/memory.vcd";
    %vpi_call 2 34 "$dumpvars", 1'sb0, S_01234540;
    %end;
    .thread T_5;
    .scope S_01234540;
T_6 ;
    %movi 8, 2, 32;
    %set/v v01247D70_0, 8, 32;
    %fork TD_tb.reset, S_012343A8;
    %join;
    %vpi_call 2 77 "$display", "\012==== TEST 1: STORE WORD ====";
    %set/v v01247D18_0, 1, 4;
    %movi 8, 2864434397, 32;
    %set/v v01247CC0_0, 8, 32;
    %movi 8, 3, 32;
    %set/v v0120ABA0_0, 8, 32;
    %fork TD_tb.store_data, S_01234320;
    %join;
    %movi 8, 3, 32;
    %set/v v01241590_0, 8, 32;
    %fork TD_tb.load_data, S_01234210;
    %join;
    %vpi_call 2 82 "$display", "\012==== TEST 2: STORE HALF ====";
    %movi 8, 3, 4;
    %set/v v01247D18_0, 8, 4;
    %movi 8, 61183, 32;
    %set/v v01247CC0_0, 8, 32;
    %movi 8, 4, 32;
    %set/v v0120ABA0_0, 8, 32;
    %fork TD_tb.store_data, S_01234320;
    %join;
    %movi 8, 4, 32;
    %set/v v01241590_0, 8, 32;
    %fork TD_tb.load_data, S_01234210;
    %join;
    %vpi_call 2 87 "$display", "\012==== TEST 3: STORE BYTE ====";
    %movi 8, 1, 4;
    %set/v v01247D18_0, 8, 4;
    %movi 8, 153, 32;
    %set/v v01247CC0_0, 8, 32;
    %movi 8, 5, 32;
    %set/v v0120ABA0_0, 8, 32;
    %fork TD_tb.store_data, S_01234320;
    %join;
    %movi 8, 5, 32;
    %set/v v01241590_0, 8, 32;
    %fork TD_tb.load_data, S_01234210;
    %join;
    %vpi_call 2 92 "$display", "\012==== TEST 4: MULTI WRITE LOOP ====";
    %set/v v01241A60_0, 0, 32;
T_6.0 ;
    %load/v 8, v01241A60_0, 32;
   %cmpi/s 8, 8, 32;
    %jmp/0xz T_6.1, 5;
    %set/v v01247D18_0, 1, 4;
    %load/v 8, v01241A60_0, 32;
    %mov 40, 39, 1;
    %muli 8, 16, 33;
    %addi 8, 8, 33;
    %set/v v01247CC0_0, 8, 32;
    %load/v 8, v01241A60_0, 32;
    %set/v v0120ABA0_0, 8, 32;
    %fork TD_tb.store_data, S_01234320;
    %join;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v01241A60_0, 32;
    %set/v v01241A60_0, 8, 32;
    %jmp T_6.0;
T_6.1 ;
    %set/v v01241A60_0, 0, 32;
T_6.2 ;
    %load/v 8, v01241A60_0, 32;
   %cmpi/s 8, 8, 32;
    %jmp/0xz T_6.3, 5;
    %load/v 8, v01241A60_0, 32;
    %set/v v01241590_0, 8, 32;
    %fork TD_tb.load_data, S_01234210;
    %join;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v01241A60_0, 32;
    %set/v v01241A60_0, 8, 32;
    %jmp T_6.2;
T_6.3 ;
    %vpi_call 2 100 "$display", "\012Simulation Done.\012";
    %delay 50000, 0;
    %vpi_call 2 101 "$finish";
    %end;
    .thread T_6;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    ".\test\tb_memory.v";
    "././source/memory.v";
